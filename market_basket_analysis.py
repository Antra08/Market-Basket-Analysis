# -*- coding: utf-8 -*-
"""Market Basket Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vp4mpcUjlRhklV0e6uNLk8YOkq9qjr8x
"""

from google.colab import drive
drive.mount('/content/drive')

my_folder = "/content/drive/MyDrive/market basket analysis"

import pandas as pd

data = pd.read_excel("/content/drive/MyDrive/market basket analysis/Online Retail.xlsx")

data.head()

data.shape

data.dropna(subset=['CustomerID'], inplace=True)
data = data[data['Quantity'] > 0]
data = data[~data['InvoiceNo'].astype(str).str.startswith('C')]
data = data[data['Country'] == 'United Kingdom']

data.shape

data

data.info()

basket = data.groupby(['InvoiceNo', 'Description'])['Quantity'].sum().unstack().fillna(0)
basket = (basket > 0).astype(bool)

from mlxtend.frequent_patterns import fpgrowth, association_rules

frequent_itemsets = fpgrowth(basket, min_support=0.02, use_colnames=True)
rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)

import networkx as nx
import matplotlib.pyplot as plt

G = nx.DiGraph()
for _, row in rules.head(20).iterrows():
    for ant in row['antecedents']:
        for cons in row['consequents']:
            G.add_edge(ant, cons, weight=row['lift'])

plt.figure(figsize=(16, 12))
pos = nx.spring_layout(G,k=0.8)
nx.draw_networkx_nodes(G, pos, node_color='skyblue', node_size=3000)
nx.draw_networkx_edges(G, pos, edge_color='gray', arrows=True)
labels = {node: '\n'.join(node.split()) for node in G.nodes()}
nx.draw_networkx_labels(G, pos, labels, font_size=9, font_family='sans-serif')

plt.title("Product Association Network", fontsize=14)
plt.axis('off')
plt.tight_layout()
plt.show()

def recommend_products(product, rules_df):
    recommendations = []
    for _, row in rules_df.iterrows():
        if product in row['antecedents']:
            recommendations.extend(list(row['consequents']))
    return list(set(recommendations))

# Example
recommend_products("WHITE HANGING HEART T-LIGHT HOLDER", rules)

data['InvoiceMonth'] = data['InvoiceDate'].dt.to_period('M')
monthly_sales = data.groupby(['InvoiceMonth', 'Description'])['Quantity'].sum().unstack().fillna(0)

top5_products = monthly_sales.sum().sort_values(ascending=False).head(5).index
monthly_sales[top5_products].plot(figsize=(12, 6), title="Monthly Sales Trend for Top 5 Products")
plt.ylabel("Quantity Sold")
plt.xlabel("Month")
plt.grid(True)
plt.show()